{"ast":null,"code":"var _jsxFileName = \"/Users/vandanakolusu/Documents/Software Engineering Files/Frontend/LMS_SE_UI/src/pages/ChangePassword/ChangePassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport AppHeader from \"../../components/AppHeader\";\nimport \"./ChangePassword.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChangePassword() {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleChangePassword = () => {\n    setError(\"\");\n    const query = new URLSearchParams(window.location.search);\n    const email = query.get('email');\n    const recoveryToken = query.get('token');\n    if (!recoveryToken || !email) {\n      setError('No recovery token or email found');\n      return;\n    }\n    if (!password || !confirmPassword) {\n      setError(\"Enter all Mandatory Fields\");\n      return;\n    }\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]+$/;\n    if (!password.match(passwordRegex)) {\n      setError('Password must contain at least one uppercase letter, one lowercase letter, one number, and one special symbol');\n      return;\n    }\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match.\");\n      return;\n    }\n    axios.put('https://edunexa.onrender.com/change-password/', {\n      email: email,\n      password: password\n    }).then(response => {\n      let msg = response.data;\n      if (msg.message === \"reset successful\") {\n        window.location.assign(\"http://localhost:3002/login/\");\n      }\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"change-password\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"change-password-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            placeholder: \"Enter Your New Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \" Retype new Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"required\",\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            placeholder: \"Re-enter your new Password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleChangePassword,\n          children: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/\",\n              children: \"Back to Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(ChangePassword, \"gbm+5yVTWa+gpKBcAOJRj8eQpB8=\");\n_c = ChangePassword;\nexport default ChangePassword;\nvar _c;\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"names":["React","useState","AppHeader","axios","jsxDEV","_jsxDEV","ChangePassword","_s","password","setPassword","confirmPassword","setConfirmPassword","error","setError","handleChangePassword","query","URLSearchParams","window","location","search","email","get","recoveryToken","passwordRegex","match","put","then","response","msg","data","message","assign","catch","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","id","placeholder","value","onChange","e","target","onClick","href","_c","$RefreshReg$"],"sources":["/Users/vandanakolusu/Documents/Software Engineering Files/Frontend/LMS_SE_UI/src/pages/ChangePassword/ChangePassword.js"],"sourcesContent":["import React, { useState} from \"react\";\nimport AppHeader from \"../../components/AppHeader\";\nimport \"./ChangePassword.css\"\nimport axios from \"axios\"\n\n\nfunction ChangePassword() {\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleChangePassword = () => {\n    setError(\"\");\n    const query = new URLSearchParams(window.location.search);\n    const email = query.get('email')\n    const recoveryToken = query.get('token')\n\n    if (!recoveryToken || !email) {\n      setError('No recovery token or email found')\n      return;\n    }\n\n    if (!password || !confirmPassword) {\n      setError(\"Enter all Mandatory Fields\");\n      return;\n    }\n    \n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]+$/;\n    if (!password.match(passwordRegex)) {\n      setError('Password must contain at least one uppercase letter, one lowercase letter, one number, and one special symbol');\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match.\");\n      return;\n    }\n\n    axios\n    .put('https://edunexa.onrender.com/change-password/', {\n      email: email,\n      password: password\n    })\n    .then((response) => {\n      let msg = response.data\n      if (msg.message === \"reset successful\") {\n        window.location.assign(\"http://localhost:3002/login/\")\n      }\n    })\n    .catch((err) => {\n      console.error(err)\n    })\n  };\n\n  return (\n    <div>\n        <AppHeader />\n        <div className = 'change-password'>\n            <div className=\"change-password-form\">\n                <h1>Change Password</h1>\n                {error && <div className=\"error-message\">{error}</div>}\n                <div>\n                    <label htmlFor=\"password\">New Password</label>\n                    <span className=\"required\">*</span>\n                    <input\n                    type=\"password\"\n                    id=\"password\"\n                    placeholder= \"Enter Your New Password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"confirmPassword\"> Retype new Password</label>\n                    <span className=\"required\">*</span>\n                    <input\n                    type=\"password\"\n                    id=\"confirmPassword\"\n                    placeholder= \"Re-enter your new Password\"\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                    />\n                </div>\n                <button onClick={handleChangePassword}>Change Password</button>\n                <div>\n                    <p>\n                        <a href=\"/\">Back to Login</a>\n                    </p>\n                </div>\n            </div>\n        </div>  \n    </div>\n  \n  );\n}\n\nexport default ChangePassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}