{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { ScriptLoader } from '../ScriptLoader2';\nimport { getTinymce } from '../TinyMCE';\nimport { isFunction, isTextareaOrInput, mergePlugins, uuid, configHandlers, isBeforeInputEventAvailable, isInDoc, setMode } from '../Utils';\nimport { EditorPropTypes } from './EditorPropTypes';\nvar Editor = /** @class */function (_super) {\n  __extends(Editor, _super);\n  function Editor(props) {\n    var _a, _b, _c;\n    var _this = _super.call(this, props) || this;\n    _this.rollbackTimer = undefined;\n    _this.valueCursor = undefined;\n    _this.rollbackChange = function () {\n      var editor = _this.editor;\n      var value = _this.props.value;\n      if (editor && value && value !== _this.currentContent) {\n        editor.undoManager.ignore(function () {\n          editor.setContent(value);\n          // only restore cursor on inline editors when they are focused\n          // as otherwise it will cause a focus grab\n          if (_this.valueCursor && (!_this.inline || editor.hasFocus())) {\n            try {\n              editor.selection.moveToBookmark(_this.valueCursor);\n            } catch (e) {/* ignore */}\n          }\n        });\n      }\n      _this.rollbackTimer = undefined;\n    };\n    _this.handleBeforeInput = function (_evt) {\n      if (_this.props.value !== undefined && _this.props.value === _this.currentContent && _this.editor) {\n        if (!_this.inline || _this.editor.hasFocus()) {\n          try {\n            // getBookmark throws exceptions when the editor has not been focused\n            // possibly only in inline mode but I'm not taking chances\n            _this.valueCursor = _this.editor.selection.getBookmark(3);\n          } catch (e) {/* ignore */}\n        }\n      }\n    };\n    _this.handleBeforeInputSpecial = function (evt) {\n      if (evt.key === 'Enter' || evt.key === 'Backspace' || evt.key === 'Delete') {\n        _this.handleBeforeInput(evt);\n      }\n    };\n    _this.handleEditorChange = function (_evt) {\n      var editor = _this.editor;\n      if (editor && editor.initialized) {\n        var newContent = editor.getContent();\n        if (_this.props.value !== undefined && _this.props.value !== newContent && _this.props.rollback !== false) {\n          // start a timer and revert to the value if not applied in time\n          if (!_this.rollbackTimer) {\n            _this.rollbackTimer = window.setTimeout(_this.rollbackChange, typeof _this.props.rollback === 'number' ? _this.props.rollback : 200);\n          }\n        }\n        if (newContent !== _this.currentContent) {\n          _this.currentContent = newContent;\n          if (isFunction(_this.props.onEditorChange)) {\n            _this.props.onEditorChange(newContent, editor);\n          }\n        }\n      }\n    };\n    _this.handleEditorChangeSpecial = function (evt) {\n      if (evt.key === 'Backspace' || evt.key === 'Delete') {\n        _this.handleEditorChange(evt);\n      }\n    };\n    _this.initialise = function (attempts) {\n      var _a, _b, _c;\n      if (attempts === void 0) {\n        attempts = 0;\n      }\n      var target = _this.elementRef.current;\n      if (!target) {\n        return; // Editor has been unmounted\n      }\n      if (!isInDoc(target)) {\n        // this is probably someone trying to help by rendering us offscreen\n        // but we can't do that because the editor iframe must be in the document\n        // in order to have state\n        if (attempts === 0) {\n          // we probably just need to wait for the current events to be processed\n          setTimeout(function () {\n            return _this.initialise(1);\n          }, 1);\n        } else if (attempts < 100) {\n          // wait for ten seconds, polling every tenth of a second\n          setTimeout(function () {\n            return _this.initialise(attempts + 1);\n          }, 100);\n        } else {\n          // give up, at this point it seems that more polling is unlikely to help\n          throw new Error('tinymce can only be initialised when in a document');\n        }\n        return;\n      }\n      var tinymce = getTinymce(_this.view);\n      if (!tinymce) {\n        throw new Error('tinymce should have been loaded into global scope');\n      }\n      var finalInit = __assign(__assign({}, _this.props.init), {\n        selector: undefined,\n        target: target,\n        readonly: _this.props.disabled,\n        inline: _this.inline,\n        plugins: mergePlugins((_a = _this.props.init) === null || _a === void 0 ? void 0 : _a.plugins, _this.props.plugins),\n        toolbar: (_b = _this.props.toolbar) !== null && _b !== void 0 ? _b : (_c = _this.props.init) === null || _c === void 0 ? void 0 : _c.toolbar,\n        setup: function (editor) {\n          _this.editor = editor;\n          _this.bindHandlers({});\n          // When running in inline mode the editor gets the initial value\n          // from the innerHTML of the element it is initialized on.\n          // However we don't want to take on the responsibility of sanitizing\n          // to remove XSS in the react integration so we have a chicken and egg\n          // problem... We avoid it by sneaking in a set content before the first\n          // \"official\" setContent and using TinyMCE to do the sanitization.\n          if (_this.inline && !isTextareaOrInput(target)) {\n            editor.once('PostRender', function (_evt) {\n              editor.setContent(_this.getInitialValue(), {\n                no_events: true\n              });\n            });\n          }\n          if (_this.props.init && isFunction(_this.props.init.setup)) {\n            _this.props.init.setup(editor);\n          }\n        },\n        init_instance_callback: function (editor) {\n          var _a, _b;\n          // check for changes that happened since tinymce.init() was called\n          var initialValue = _this.getInitialValue();\n          _this.currentContent = (_a = _this.currentContent) !== null && _a !== void 0 ? _a : editor.getContent();\n          if (_this.currentContent !== initialValue) {\n            _this.currentContent = initialValue;\n            // same as resetContent in TinyMCE 5\n            editor.setContent(initialValue);\n            editor.undoManager.clear();\n            editor.undoManager.add();\n            editor.setDirty(false);\n          }\n          var disabled = (_b = _this.props.disabled) !== null && _b !== void 0 ? _b : false;\n          setMode(_this.editor, disabled ? 'readonly' : 'design');\n          // ensure existing init_instance_callback is called\n          if (_this.props.init && isFunction(_this.props.init.init_instance_callback)) {\n            _this.props.init.init_instance_callback(editor);\n          }\n        }\n      });\n      if (!_this.inline) {\n        target.style.visibility = '';\n      }\n      if (isTextareaOrInput(target)) {\n        target.value = _this.getInitialValue();\n      }\n      tinymce.init(finalInit);\n    };\n    _this.id = _this.props.id || uuid('tiny-react');\n    _this.elementRef = React.createRef();\n    _this.inline = (_c = (_a = _this.props.inline) !== null && _a !== void 0 ? _a : (_b = _this.props.init) === null || _b === void 0 ? void 0 : _b.inline) !== null && _c !== void 0 ? _c : false;\n    _this.boundHandlers = {};\n    return _this;\n  }\n  Object.defineProperty(Editor.prototype, \"view\", {\n    get: function () {\n      var _a, _b;\n      return (_b = (_a = this.elementRef.current) === null || _a === void 0 ? void 0 : _a.ownerDocument.defaultView) !== null && _b !== void 0 ? _b : window;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Editor.prototype.componentDidUpdate = function (prevProps) {\n    var _this = this;\n    var _a, _b;\n    if (this.rollbackTimer) {\n      clearTimeout(this.rollbackTimer);\n      this.rollbackTimer = undefined;\n    }\n    if (this.editor) {\n      this.bindHandlers(prevProps);\n      if (this.editor.initialized) {\n        this.currentContent = (_a = this.currentContent) !== null && _a !== void 0 ? _a : this.editor.getContent();\n        if (typeof this.props.initialValue === 'string' && this.props.initialValue !== prevProps.initialValue) {\n          // same as resetContent in TinyMCE 5\n          this.editor.setContent(this.props.initialValue);\n          this.editor.undoManager.clear();\n          this.editor.undoManager.add();\n          this.editor.setDirty(false);\n        } else if (typeof this.props.value === 'string' && this.props.value !== this.currentContent) {\n          var localEditor_1 = this.editor;\n          localEditor_1.undoManager.transact(function () {\n            // inline editors grab focus when restoring selection\n            // so we don't try to keep their selection unless they are currently focused\n            var cursor;\n            if (!_this.inline || localEditor_1.hasFocus()) {\n              try {\n                // getBookmark throws exceptions when the editor has not been focused\n                // possibly only in inline mode but I'm not taking chances\n                cursor = localEditor_1.selection.getBookmark(3);\n              } catch (e) {/* ignore */}\n            }\n            var valueCursor = _this.valueCursor;\n            localEditor_1.setContent(_this.props.value);\n            if (!_this.inline || localEditor_1.hasFocus()) {\n              for (var _i = 0, _a = [cursor, valueCursor]; _i < _a.length; _i++) {\n                var bookmark = _a[_i];\n                if (bookmark) {\n                  try {\n                    localEditor_1.selection.moveToBookmark(bookmark);\n                    _this.valueCursor = bookmark;\n                    break;\n                  } catch (e) {/* ignore */}\n                }\n              }\n            }\n          });\n        }\n        if (this.props.disabled !== prevProps.disabled) {\n          var disabled = (_b = this.props.disabled) !== null && _b !== void 0 ? _b : false;\n          setMode(this.editor, disabled ? 'readonly' : 'design');\n        }\n      }\n    }\n  };\n  Editor.prototype.componentDidMount = function () {\n    var _this = this;\n    var _a, _b, _c, _d, _e;\n    if (getTinymce(this.view) !== null) {\n      this.initialise();\n    } else if (Array.isArray(this.props.tinymceScriptSrc) && this.props.tinymceScriptSrc.length === 0) {\n      (_b = (_a = this.props).onScriptsLoadError) === null || _b === void 0 ? void 0 : _b.call(_a, new Error('No `tinymce` global is present but the `tinymceScriptSrc` prop was an empty array.'));\n    } else if ((_c = this.elementRef.current) === null || _c === void 0 ? void 0 : _c.ownerDocument) {\n      var successHandler = function () {\n        var _a, _b;\n        (_b = (_a = _this.props).onScriptsLoad) === null || _b === void 0 ? void 0 : _b.call(_a);\n        _this.initialise();\n      };\n      var errorHandler = function (err) {\n        var _a, _b;\n        (_b = (_a = _this.props).onScriptsLoadError) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n      };\n      ScriptLoader.loadList(this.elementRef.current.ownerDocument, this.getScriptSources(), (_e = (_d = this.props.scriptLoading) === null || _d === void 0 ? void 0 : _d.delay) !== null && _e !== void 0 ? _e : 0, successHandler, errorHandler);\n    }\n  };\n  Editor.prototype.componentWillUnmount = function () {\n    var _this = this;\n    var editor = this.editor;\n    if (editor) {\n      editor.off(this.changeEvents(), this.handleEditorChange);\n      editor.off(this.beforeInputEvent(), this.handleBeforeInput);\n      editor.off('keypress', this.handleEditorChangeSpecial);\n      editor.off('keydown', this.handleBeforeInputSpecial);\n      editor.off('NewBlock', this.handleEditorChange);\n      Object.keys(this.boundHandlers).forEach(function (eventName) {\n        editor.off(eventName, _this.boundHandlers[eventName]);\n      });\n      this.boundHandlers = {};\n      editor.remove();\n      this.editor = undefined;\n    }\n  };\n  Editor.prototype.render = function () {\n    return this.inline ? this.renderInline() : this.renderIframe();\n  };\n  Editor.prototype.changeEvents = function () {\n    var _a, _b, _c;\n    var isIE = (_c = (_b = (_a = getTinymce(this.view)) === null || _a === void 0 ? void 0 : _a.Env) === null || _b === void 0 ? void 0 : _b.browser) === null || _c === void 0 ? void 0 : _c.isIE();\n    return isIE ? 'change keyup compositionend setcontent CommentChange' : 'change input compositionend setcontent CommentChange';\n  };\n  Editor.prototype.beforeInputEvent = function () {\n    return isBeforeInputEventAvailable() ? 'beforeinput SelectionChange' : 'SelectionChange';\n  };\n  Editor.prototype.renderInline = function () {\n    var _a = this.props.tagName,\n      tagName = _a === void 0 ? 'div' : _a;\n    return React.createElement(tagName, {\n      ref: this.elementRef,\n      id: this.id\n    });\n  };\n  Editor.prototype.renderIframe = function () {\n    return React.createElement('textarea', {\n      ref: this.elementRef,\n      style: {\n        visibility: 'hidden'\n      },\n      name: this.props.textareaName,\n      id: this.id\n    });\n  };\n  Editor.prototype.getScriptSources = function () {\n    var _a, _b;\n    var async = (_a = this.props.scriptLoading) === null || _a === void 0 ? void 0 : _a.async;\n    var defer = (_b = this.props.scriptLoading) === null || _b === void 0 ? void 0 : _b.defer;\n    if (this.props.tinymceScriptSrc !== undefined) {\n      if (typeof this.props.tinymceScriptSrc === 'string') {\n        return [{\n          src: this.props.tinymceScriptSrc,\n          async: async,\n          defer: defer\n        }];\n      }\n      // multiple scripts can be specified which allows for hybrid mode\n      return this.props.tinymceScriptSrc.map(function (item) {\n        if (typeof item === 'string') {\n          // async does not make sense for multiple items unless\n          // they are not dependent (which will be unlikely)\n          return {\n            src: item,\n            async: async,\n            defer: defer\n          };\n        } else {\n          return item;\n        }\n      });\n    }\n    // fallback to the cloud when the tinymceScriptSrc is not specified\n    var channel = this.props.cloudChannel;\n    var apiKey = this.props.apiKey ? this.props.apiKey : 'no-api-key';\n    var cloudTinyJs = \"https://cdn.tiny.cloud/1/\".concat(apiKey, \"/tinymce/\").concat(channel, \"/tinymce.min.js\");\n    return [{\n      src: cloudTinyJs,\n      async: async,\n      defer: defer\n    }];\n  };\n  Editor.prototype.getInitialValue = function () {\n    if (typeof this.props.initialValue === 'string') {\n      return this.props.initialValue;\n    } else if (typeof this.props.value === 'string') {\n      return this.props.value;\n    } else {\n      return '';\n    }\n  };\n  Editor.prototype.bindHandlers = function (prevProps) {\n    var _this = this;\n    if (this.editor !== undefined) {\n      // typescript chokes trying to understand the type of the lookup function\n      configHandlers(this.editor, prevProps, this.props, this.boundHandlers, function (key) {\n        return _this.props[key];\n      });\n      // check if we should monitor editor changes\n      var isValueControlled = function (p) {\n        return p.onEditorChange !== undefined || p.value !== undefined;\n      };\n      var wasControlled = isValueControlled(prevProps);\n      var nowControlled = isValueControlled(this.props);\n      if (!wasControlled && nowControlled) {\n        this.editor.on(this.changeEvents(), this.handleEditorChange);\n        this.editor.on(this.beforeInputEvent(), this.handleBeforeInput);\n        this.editor.on('keydown', this.handleBeforeInputSpecial);\n        this.editor.on('keyup', this.handleEditorChangeSpecial);\n        this.editor.on('NewBlock', this.handleEditorChange);\n      } else if (wasControlled && !nowControlled) {\n        this.editor.off(this.changeEvents(), this.handleEditorChange);\n        this.editor.off(this.beforeInputEvent(), this.handleBeforeInput);\n        this.editor.off('keydown', this.handleBeforeInputSpecial);\n        this.editor.off('keyup', this.handleEditorChangeSpecial);\n        this.editor.off('NewBlock', this.handleEditorChange);\n      }\n    }\n  };\n  Editor.propTypes = EditorPropTypes;\n  Editor.defaultProps = {\n    cloudChannel: '6'\n  };\n  return Editor;\n}(React.Component);\nexport { Editor };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","React","ScriptLoader","getTinymce","isFunction","isTextareaOrInput","mergePlugins","uuid","configHandlers","isBeforeInputEventAvailable","isInDoc","setMode","EditorPropTypes","Editor","_super","props","_a","_b","_c","_this","rollbackTimer","undefined","valueCursor","rollbackChange","editor","value","currentContent","undoManager","ignore","setContent","inline","hasFocus","selection","moveToBookmark","e","handleBeforeInput","_evt","getBookmark","handleBeforeInputSpecial","evt","key","handleEditorChange","initialized","newContent","getContent","rollback","window","setTimeout","onEditorChange","handleEditorChangeSpecial","initialise","attempts","target","elementRef","current","Error","tinymce","view","finalInit","init","selector","readonly","disabled","plugins","toolbar","setup","bindHandlers","once","getInitialValue","no_events","init_instance_callback","initialValue","clear","add","setDirty","style","visibility","id","createRef","boundHandlers","defineProperty","get","ownerDocument","defaultView","enumerable","configurable","componentDidUpdate","prevProps","clearTimeout","localEditor_1","transact","cursor","_i","bookmark","componentDidMount","_d","_e","isArray","tinymceScriptSrc","onScriptsLoadError","successHandler","onScriptsLoad","errorHandler","err","loadList","getScriptSources","scriptLoading","delay","componentWillUnmount","off","changeEvents","beforeInputEvent","keys","forEach","eventName","remove","render","renderInline","renderIframe","isIE","Env","browser","tagName","createElement","ref","name","textareaName","async","defer","src","map","item","channel","cloudChannel","apiKey","cloudTinyJs","concat","isValueControlled","wasControlled","nowControlled","on","propTypes","defaultProps","Component"],"sources":["/Users/vandanakolusu/Documents/Software Engineering Files/Frontend/LMS_SE_UI/node_modules/@tinymce/tinymce-react/lib/es2015/main/ts/components/Editor.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { ScriptLoader } from '../ScriptLoader2';\nimport { getTinymce } from '../TinyMCE';\nimport { isFunction, isTextareaOrInput, mergePlugins, uuid, configHandlers, isBeforeInputEventAvailable, isInDoc, setMode } from '../Utils';\nimport { EditorPropTypes } from './EditorPropTypes';\nvar Editor = /** @class */ (function (_super) {\n    __extends(Editor, _super);\n    function Editor(props) {\n        var _a, _b, _c;\n        var _this = _super.call(this, props) || this;\n        _this.rollbackTimer = undefined;\n        _this.valueCursor = undefined;\n        _this.rollbackChange = function () {\n            var editor = _this.editor;\n            var value = _this.props.value;\n            if (editor && value && value !== _this.currentContent) {\n                editor.undoManager.ignore(function () {\n                    editor.setContent(value);\n                    // only restore cursor on inline editors when they are focused\n                    // as otherwise it will cause a focus grab\n                    if (_this.valueCursor && (!_this.inline || editor.hasFocus())) {\n                        try {\n                            editor.selection.moveToBookmark(_this.valueCursor);\n                        }\n                        catch (e) { /* ignore */ }\n                    }\n                });\n            }\n            _this.rollbackTimer = undefined;\n        };\n        _this.handleBeforeInput = function (_evt) {\n            if (_this.props.value !== undefined && _this.props.value === _this.currentContent && _this.editor) {\n                if (!_this.inline || _this.editor.hasFocus()) {\n                    try {\n                        // getBookmark throws exceptions when the editor has not been focused\n                        // possibly only in inline mode but I'm not taking chances\n                        _this.valueCursor = _this.editor.selection.getBookmark(3);\n                    }\n                    catch (e) { /* ignore */ }\n                }\n            }\n        };\n        _this.handleBeforeInputSpecial = function (evt) {\n            if (evt.key === 'Enter' || evt.key === 'Backspace' || evt.key === 'Delete') {\n                _this.handleBeforeInput(evt);\n            }\n        };\n        _this.handleEditorChange = function (_evt) {\n            var editor = _this.editor;\n            if (editor && editor.initialized) {\n                var newContent = editor.getContent();\n                if (_this.props.value !== undefined && _this.props.value !== newContent && _this.props.rollback !== false) {\n                    // start a timer and revert to the value if not applied in time\n                    if (!_this.rollbackTimer) {\n                        _this.rollbackTimer = window.setTimeout(_this.rollbackChange, typeof _this.props.rollback === 'number' ? _this.props.rollback : 200);\n                    }\n                }\n                if (newContent !== _this.currentContent) {\n                    _this.currentContent = newContent;\n                    if (isFunction(_this.props.onEditorChange)) {\n                        _this.props.onEditorChange(newContent, editor);\n                    }\n                }\n            }\n        };\n        _this.handleEditorChangeSpecial = function (evt) {\n            if (evt.key === 'Backspace' || evt.key === 'Delete') {\n                _this.handleEditorChange(evt);\n            }\n        };\n        _this.initialise = function (attempts) {\n            var _a, _b, _c;\n            if (attempts === void 0) { attempts = 0; }\n            var target = _this.elementRef.current;\n            if (!target) {\n                return; // Editor has been unmounted\n            }\n            if (!isInDoc(target)) {\n                // this is probably someone trying to help by rendering us offscreen\n                // but we can't do that because the editor iframe must be in the document\n                // in order to have state\n                if (attempts === 0) {\n                    // we probably just need to wait for the current events to be processed\n                    setTimeout(function () { return _this.initialise(1); }, 1);\n                }\n                else if (attempts < 100) {\n                    // wait for ten seconds, polling every tenth of a second\n                    setTimeout(function () { return _this.initialise(attempts + 1); }, 100);\n                }\n                else {\n                    // give up, at this point it seems that more polling is unlikely to help\n                    throw new Error('tinymce can only be initialised when in a document');\n                }\n                return;\n            }\n            var tinymce = getTinymce(_this.view);\n            if (!tinymce) {\n                throw new Error('tinymce should have been loaded into global scope');\n            }\n            var finalInit = __assign(__assign({}, _this.props.init), { selector: undefined, target: target, readonly: _this.props.disabled, inline: _this.inline, plugins: mergePlugins((_a = _this.props.init) === null || _a === void 0 ? void 0 : _a.plugins, _this.props.plugins), toolbar: (_b = _this.props.toolbar) !== null && _b !== void 0 ? _b : (_c = _this.props.init) === null || _c === void 0 ? void 0 : _c.toolbar, setup: function (editor) {\n                    _this.editor = editor;\n                    _this.bindHandlers({});\n                    // When running in inline mode the editor gets the initial value\n                    // from the innerHTML of the element it is initialized on.\n                    // However we don't want to take on the responsibility of sanitizing\n                    // to remove XSS in the react integration so we have a chicken and egg\n                    // problem... We avoid it by sneaking in a set content before the first\n                    // \"official\" setContent and using TinyMCE to do the sanitization.\n                    if (_this.inline && !isTextareaOrInput(target)) {\n                        editor.once('PostRender', function (_evt) {\n                            editor.setContent(_this.getInitialValue(), { no_events: true });\n                        });\n                    }\n                    if (_this.props.init && isFunction(_this.props.init.setup)) {\n                        _this.props.init.setup(editor);\n                    }\n                }, init_instance_callback: function (editor) {\n                    var _a, _b;\n                    // check for changes that happened since tinymce.init() was called\n                    var initialValue = _this.getInitialValue();\n                    _this.currentContent = (_a = _this.currentContent) !== null && _a !== void 0 ? _a : editor.getContent();\n                    if (_this.currentContent !== initialValue) {\n                        _this.currentContent = initialValue;\n                        // same as resetContent in TinyMCE 5\n                        editor.setContent(initialValue);\n                        editor.undoManager.clear();\n                        editor.undoManager.add();\n                        editor.setDirty(false);\n                    }\n                    var disabled = (_b = _this.props.disabled) !== null && _b !== void 0 ? _b : false;\n                    setMode(_this.editor, disabled ? 'readonly' : 'design');\n                    // ensure existing init_instance_callback is called\n                    if (_this.props.init && isFunction(_this.props.init.init_instance_callback)) {\n                        _this.props.init.init_instance_callback(editor);\n                    }\n                } });\n            if (!_this.inline) {\n                target.style.visibility = '';\n            }\n            if (isTextareaOrInput(target)) {\n                target.value = _this.getInitialValue();\n            }\n            tinymce.init(finalInit);\n        };\n        _this.id = _this.props.id || uuid('tiny-react');\n        _this.elementRef = React.createRef();\n        _this.inline = (_c = (_a = _this.props.inline) !== null && _a !== void 0 ? _a : (_b = _this.props.init) === null || _b === void 0 ? void 0 : _b.inline) !== null && _c !== void 0 ? _c : false;\n        _this.boundHandlers = {};\n        return _this;\n    }\n    Object.defineProperty(Editor.prototype, \"view\", {\n        get: function () {\n            var _a, _b;\n            return (_b = (_a = this.elementRef.current) === null || _a === void 0 ? void 0 : _a.ownerDocument.defaultView) !== null && _b !== void 0 ? _b : window;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Editor.prototype.componentDidUpdate = function (prevProps) {\n        var _this = this;\n        var _a, _b;\n        if (this.rollbackTimer) {\n            clearTimeout(this.rollbackTimer);\n            this.rollbackTimer = undefined;\n        }\n        if (this.editor) {\n            this.bindHandlers(prevProps);\n            if (this.editor.initialized) {\n                this.currentContent = (_a = this.currentContent) !== null && _a !== void 0 ? _a : this.editor.getContent();\n                if (typeof this.props.initialValue === 'string' && this.props.initialValue !== prevProps.initialValue) {\n                    // same as resetContent in TinyMCE 5\n                    this.editor.setContent(this.props.initialValue);\n                    this.editor.undoManager.clear();\n                    this.editor.undoManager.add();\n                    this.editor.setDirty(false);\n                }\n                else if (typeof this.props.value === 'string' && this.props.value !== this.currentContent) {\n                    var localEditor_1 = this.editor;\n                    localEditor_1.undoManager.transact(function () {\n                        // inline editors grab focus when restoring selection\n                        // so we don't try to keep their selection unless they are currently focused\n                        var cursor;\n                        if (!_this.inline || localEditor_1.hasFocus()) {\n                            try {\n                                // getBookmark throws exceptions when the editor has not been focused\n                                // possibly only in inline mode but I'm not taking chances\n                                cursor = localEditor_1.selection.getBookmark(3);\n                            }\n                            catch (e) { /* ignore */ }\n                        }\n                        var valueCursor = _this.valueCursor;\n                        localEditor_1.setContent(_this.props.value);\n                        if (!_this.inline || localEditor_1.hasFocus()) {\n                            for (var _i = 0, _a = [cursor, valueCursor]; _i < _a.length; _i++) {\n                                var bookmark = _a[_i];\n                                if (bookmark) {\n                                    try {\n                                        localEditor_1.selection.moveToBookmark(bookmark);\n                                        _this.valueCursor = bookmark;\n                                        break;\n                                    }\n                                    catch (e) { /* ignore */ }\n                                }\n                            }\n                        }\n                    });\n                }\n                if (this.props.disabled !== prevProps.disabled) {\n                    var disabled = (_b = this.props.disabled) !== null && _b !== void 0 ? _b : false;\n                    setMode(this.editor, disabled ? 'readonly' : 'design');\n                }\n            }\n        }\n    };\n    Editor.prototype.componentDidMount = function () {\n        var _this = this;\n        var _a, _b, _c, _d, _e;\n        if (getTinymce(this.view) !== null) {\n            this.initialise();\n        }\n        else if (Array.isArray(this.props.tinymceScriptSrc) && this.props.tinymceScriptSrc.length === 0) {\n            (_b = (_a = this.props).onScriptsLoadError) === null || _b === void 0 ? void 0 : _b.call(_a, new Error('No `tinymce` global is present but the `tinymceScriptSrc` prop was an empty array.'));\n        }\n        else if ((_c = this.elementRef.current) === null || _c === void 0 ? void 0 : _c.ownerDocument) {\n            var successHandler = function () {\n                var _a, _b;\n                (_b = (_a = _this.props).onScriptsLoad) === null || _b === void 0 ? void 0 : _b.call(_a);\n                _this.initialise();\n            };\n            var errorHandler = function (err) {\n                var _a, _b;\n                (_b = (_a = _this.props).onScriptsLoadError) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n            };\n            ScriptLoader.loadList(this.elementRef.current.ownerDocument, this.getScriptSources(), (_e = (_d = this.props.scriptLoading) === null || _d === void 0 ? void 0 : _d.delay) !== null && _e !== void 0 ? _e : 0, successHandler, errorHandler);\n        }\n    };\n    Editor.prototype.componentWillUnmount = function () {\n        var _this = this;\n        var editor = this.editor;\n        if (editor) {\n            editor.off(this.changeEvents(), this.handleEditorChange);\n            editor.off(this.beforeInputEvent(), this.handleBeforeInput);\n            editor.off('keypress', this.handleEditorChangeSpecial);\n            editor.off('keydown', this.handleBeforeInputSpecial);\n            editor.off('NewBlock', this.handleEditorChange);\n            Object.keys(this.boundHandlers).forEach(function (eventName) {\n                editor.off(eventName, _this.boundHandlers[eventName]);\n            });\n            this.boundHandlers = {};\n            editor.remove();\n            this.editor = undefined;\n        }\n    };\n    Editor.prototype.render = function () {\n        return this.inline ? this.renderInline() : this.renderIframe();\n    };\n    Editor.prototype.changeEvents = function () {\n        var _a, _b, _c;\n        var isIE = (_c = (_b = (_a = getTinymce(this.view)) === null || _a === void 0 ? void 0 : _a.Env) === null || _b === void 0 ? void 0 : _b.browser) === null || _c === void 0 ? void 0 : _c.isIE();\n        return (isIE\n            ? 'change keyup compositionend setcontent CommentChange'\n            : 'change input compositionend setcontent CommentChange');\n    };\n    Editor.prototype.beforeInputEvent = function () {\n        return isBeforeInputEventAvailable() ? 'beforeinput SelectionChange' : 'SelectionChange';\n    };\n    Editor.prototype.renderInline = function () {\n        var _a = this.props.tagName, tagName = _a === void 0 ? 'div' : _a;\n        return React.createElement(tagName, {\n            ref: this.elementRef,\n            id: this.id\n        });\n    };\n    Editor.prototype.renderIframe = function () {\n        return React.createElement('textarea', {\n            ref: this.elementRef,\n            style: { visibility: 'hidden' },\n            name: this.props.textareaName,\n            id: this.id\n        });\n    };\n    Editor.prototype.getScriptSources = function () {\n        var _a, _b;\n        var async = (_a = this.props.scriptLoading) === null || _a === void 0 ? void 0 : _a.async;\n        var defer = (_b = this.props.scriptLoading) === null || _b === void 0 ? void 0 : _b.defer;\n        if (this.props.tinymceScriptSrc !== undefined) {\n            if (typeof this.props.tinymceScriptSrc === 'string') {\n                return [{ src: this.props.tinymceScriptSrc, async: async, defer: defer }];\n            }\n            // multiple scripts can be specified which allows for hybrid mode\n            return this.props.tinymceScriptSrc.map(function (item) {\n                if (typeof item === 'string') {\n                    // async does not make sense for multiple items unless\n                    // they are not dependent (which will be unlikely)\n                    return { src: item, async: async, defer: defer };\n                }\n                else {\n                    return item;\n                }\n            });\n        }\n        // fallback to the cloud when the tinymceScriptSrc is not specified\n        var channel = this.props.cloudChannel;\n        var apiKey = this.props.apiKey ? this.props.apiKey : 'no-api-key';\n        var cloudTinyJs = \"https://cdn.tiny.cloud/1/\".concat(apiKey, \"/tinymce/\").concat(channel, \"/tinymce.min.js\");\n        return [{ src: cloudTinyJs, async: async, defer: defer }];\n    };\n    Editor.prototype.getInitialValue = function () {\n        if (typeof this.props.initialValue === 'string') {\n            return this.props.initialValue;\n        }\n        else if (typeof this.props.value === 'string') {\n            return this.props.value;\n        }\n        else {\n            return '';\n        }\n    };\n    Editor.prototype.bindHandlers = function (prevProps) {\n        var _this = this;\n        if (this.editor !== undefined) {\n            // typescript chokes trying to understand the type of the lookup function\n            configHandlers(this.editor, prevProps, this.props, this.boundHandlers, function (key) { return _this.props[key]; });\n            // check if we should monitor editor changes\n            var isValueControlled = function (p) { return p.onEditorChange !== undefined || p.value !== undefined; };\n            var wasControlled = isValueControlled(prevProps);\n            var nowControlled = isValueControlled(this.props);\n            if (!wasControlled && nowControlled) {\n                this.editor.on(this.changeEvents(), this.handleEditorChange);\n                this.editor.on(this.beforeInputEvent(), this.handleBeforeInput);\n                this.editor.on('keydown', this.handleBeforeInputSpecial);\n                this.editor.on('keyup', this.handleEditorChangeSpecial);\n                this.editor.on('NewBlock', this.handleEditorChange);\n            }\n            else if (wasControlled && !nowControlled) {\n                this.editor.off(this.changeEvents(), this.handleEditorChange);\n                this.editor.off(this.beforeInputEvent(), this.handleBeforeInput);\n                this.editor.off('keydown', this.handleBeforeInputSpecial);\n                this.editor.off('keyup', this.handleEditorChangeSpecial);\n                this.editor.off('NewBlock', this.handleEditorChange);\n            }\n        }\n    };\n    Editor.propTypes = EditorPropTypes;\n    Editor.defaultProps = {\n        cloudChannel: '6'\n    };\n    return Editor;\n}(React.Component));\nexport { Editor };\n"],"mappings":"AAAA,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAM,YAAY;EACrD,IAAIC,aAAa,GAAG,SAAAA,CAAUC,CAAC,EAAEC,CAAC,EAAE;IAChCF,aAAa,GAAGG,MAAM,CAACC,cAAc,IAChC;MAAEC,SAAS,EAAE;IAAG,CAAC,YAAYC,KAAK,IAAI,UAAUL,CAAC,EAAEC,CAAC,EAAE;MAAED,CAAC,CAACI,SAAS,GAAGH,CAAC;IAAE,CAAE,IAC5E,UAAUD,CAAC,EAAEC,CAAC,EAAE;MAAE,KAAK,IAAIK,CAAC,IAAIL,CAAC,EAAE,IAAIC,MAAM,CAACK,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAAEN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IAAE,CAAC;IACrG,OAAOP,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;EAC9B,CAAC;EACD,OAAO,UAAUD,CAAC,EAAEC,CAAC,EAAE;IACnB,IAAI,OAAOA,CAAC,KAAK,UAAU,IAAIA,CAAC,KAAK,IAAI,EACrC,MAAM,IAAIS,SAAS,CAAC,sBAAsB,GAAGC,MAAM,CAACV,CAAC,CAAC,GAAG,+BAA+B,CAAC;IAC7FF,aAAa,CAACC,CAAC,EAAEC,CAAC,CAAC;IACnB,SAASW,EAAEA,CAAA,EAAG;MAAE,IAAI,CAACC,WAAW,GAAGb,CAAC;IAAE;IACtCA,CAAC,CAACO,SAAS,GAAGN,CAAC,KAAK,IAAI,GAAGC,MAAM,CAACY,MAAM,CAACb,CAAC,CAAC,IAAIW,EAAE,CAACL,SAAS,GAAGN,CAAC,CAACM,SAAS,EAAE,IAAIK,EAAE,CAAC,CAAC,CAAC;EACxF,CAAC;AACL,CAAC,CAAE,CAAC;AACJ,IAAIG,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,YAAY;EAClDA,QAAQ,GAAGb,MAAM,CAACc,MAAM,IAAI,UAASC,CAAC,EAAE;IACpC,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;MAChB,KAAK,IAAIb,CAAC,IAAIY,CAAC,EAAE,IAAIhB,MAAM,CAACK,SAAS,CAACC,cAAc,CAACC,IAAI,CAACS,CAAC,EAAEZ,CAAC,CAAC,EAC3DW,CAAC,CAACX,CAAC,CAAC,GAAGY,CAAC,CAACZ,CAAC,CAAC;IACnB;IACA,OAAOW,CAAC;EACZ,CAAC;EACD,OAAOF,QAAQ,CAACQ,KAAK,CAAC,IAAI,EAAEF,SAAS,CAAC;AAC1C,CAAC;AACD,OAAO,KAAKG,KAAK,MAAM,OAAO;AAC9B,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,UAAU,QAAQ,YAAY;AACvC,SAASC,UAAU,EAAEC,iBAAiB,EAAEC,YAAY,EAAEC,IAAI,EAAEC,cAAc,EAAEC,2BAA2B,EAAEC,OAAO,EAAEC,OAAO,QAAQ,UAAU;AAC3I,SAASC,eAAe,QAAQ,mBAAmB;AACnD,IAAIC,MAAM,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC1CvC,SAAS,CAACsC,MAAM,EAAEC,MAAM,CAAC;EACzB,SAASD,MAAMA,CAACE,KAAK,EAAE;IACnB,IAAIC,EAAE,EAAEC,EAAE,EAAEC,EAAE;IACd,IAAIC,KAAK,GAAGL,MAAM,CAAC5B,IAAI,CAAC,IAAI,EAAE6B,KAAK,CAAC,IAAI,IAAI;IAC5CI,KAAK,CAACC,aAAa,GAAGC,SAAS;IAC/BF,KAAK,CAACG,WAAW,GAAGD,SAAS;IAC7BF,KAAK,CAACI,cAAc,GAAG,YAAY;MAC/B,IAAIC,MAAM,GAAGL,KAAK,CAACK,MAAM;MACzB,IAAIC,KAAK,GAAGN,KAAK,CAACJ,KAAK,CAACU,KAAK;MAC7B,IAAID,MAAM,IAAIC,KAAK,IAAIA,KAAK,KAAKN,KAAK,CAACO,cAAc,EAAE;QACnDF,MAAM,CAACG,WAAW,CAACC,MAAM,CAAC,YAAY;UAClCJ,MAAM,CAACK,UAAU,CAACJ,KAAK,CAAC;UACxB;UACA;UACA,IAAIN,KAAK,CAACG,WAAW,KAAK,CAACH,KAAK,CAACW,MAAM,IAAIN,MAAM,CAACO,QAAQ,CAAC,CAAC,CAAC,EAAE;YAC3D,IAAI;cACAP,MAAM,CAACQ,SAAS,CAACC,cAAc,CAACd,KAAK,CAACG,WAAW,CAAC;YACtD,CAAC,CACD,OAAOY,CAAC,EAAE,CAAE;UAChB;QACJ,CAAC,CAAC;MACN;MACAf,KAAK,CAACC,aAAa,GAAGC,SAAS;IACnC,CAAC;IACDF,KAAK,CAACgB,iBAAiB,GAAG,UAAUC,IAAI,EAAE;MACtC,IAAIjB,KAAK,CAACJ,KAAK,CAACU,KAAK,KAAKJ,SAAS,IAAIF,KAAK,CAACJ,KAAK,CAACU,KAAK,KAAKN,KAAK,CAACO,cAAc,IAAIP,KAAK,CAACK,MAAM,EAAE;QAC/F,IAAI,CAACL,KAAK,CAACW,MAAM,IAAIX,KAAK,CAACK,MAAM,CAACO,QAAQ,CAAC,CAAC,EAAE;UAC1C,IAAI;YACA;YACA;YACAZ,KAAK,CAACG,WAAW,GAAGH,KAAK,CAACK,MAAM,CAACQ,SAAS,CAACK,WAAW,CAAC,CAAC,CAAC;UAC7D,CAAC,CACD,OAAOH,CAAC,EAAE,CAAE;QAChB;MACJ;IACJ,CAAC;IACDf,KAAK,CAACmB,wBAAwB,GAAG,UAAUC,GAAG,EAAE;MAC5C,IAAIA,GAAG,CAACC,GAAG,KAAK,OAAO,IAAID,GAAG,CAACC,GAAG,KAAK,WAAW,IAAID,GAAG,CAACC,GAAG,KAAK,QAAQ,EAAE;QACxErB,KAAK,CAACgB,iBAAiB,CAACI,GAAG,CAAC;MAChC;IACJ,CAAC;IACDpB,KAAK,CAACsB,kBAAkB,GAAG,UAAUL,IAAI,EAAE;MACvC,IAAIZ,MAAM,GAAGL,KAAK,CAACK,MAAM;MACzB,IAAIA,MAAM,IAAIA,MAAM,CAACkB,WAAW,EAAE;QAC9B,IAAIC,UAAU,GAAGnB,MAAM,CAACoB,UAAU,CAAC,CAAC;QACpC,IAAIzB,KAAK,CAACJ,KAAK,CAACU,KAAK,KAAKJ,SAAS,IAAIF,KAAK,CAACJ,KAAK,CAACU,KAAK,KAAKkB,UAAU,IAAIxB,KAAK,CAACJ,KAAK,CAAC8B,QAAQ,KAAK,KAAK,EAAE;UACvG;UACA,IAAI,CAAC1B,KAAK,CAACC,aAAa,EAAE;YACtBD,KAAK,CAACC,aAAa,GAAG0B,MAAM,CAACC,UAAU,CAAC5B,KAAK,CAACI,cAAc,EAAE,OAAOJ,KAAK,CAACJ,KAAK,CAAC8B,QAAQ,KAAK,QAAQ,GAAG1B,KAAK,CAACJ,KAAK,CAAC8B,QAAQ,GAAG,GAAG,CAAC;UACxI;QACJ;QACA,IAAIF,UAAU,KAAKxB,KAAK,CAACO,cAAc,EAAE;UACrCP,KAAK,CAACO,cAAc,GAAGiB,UAAU;UACjC,IAAIvC,UAAU,CAACe,KAAK,CAACJ,KAAK,CAACiC,cAAc,CAAC,EAAE;YACxC7B,KAAK,CAACJ,KAAK,CAACiC,cAAc,CAACL,UAAU,EAAEnB,MAAM,CAAC;UAClD;QACJ;MACJ;IACJ,CAAC;IACDL,KAAK,CAAC8B,yBAAyB,GAAG,UAAUV,GAAG,EAAE;MAC7C,IAAIA,GAAG,CAACC,GAAG,KAAK,WAAW,IAAID,GAAG,CAACC,GAAG,KAAK,QAAQ,EAAE;QACjDrB,KAAK,CAACsB,kBAAkB,CAACF,GAAG,CAAC;MACjC;IACJ,CAAC;IACDpB,KAAK,CAAC+B,UAAU,GAAG,UAAUC,QAAQ,EAAE;MACnC,IAAInC,EAAE,EAAEC,EAAE,EAAEC,EAAE;MACd,IAAIiC,QAAQ,KAAK,KAAK,CAAC,EAAE;QAAEA,QAAQ,GAAG,CAAC;MAAE;MACzC,IAAIC,MAAM,GAAGjC,KAAK,CAACkC,UAAU,CAACC,OAAO;MACrC,IAAI,CAACF,MAAM,EAAE;QACT,OAAO,CAAC;MACZ;MACA,IAAI,CAAC1C,OAAO,CAAC0C,MAAM,CAAC,EAAE;QAClB;QACA;QACA;QACA,IAAID,QAAQ,KAAK,CAAC,EAAE;UAChB;UACAJ,UAAU,CAAC,YAAY;YAAE,OAAO5B,KAAK,CAAC+B,UAAU,CAAC,CAAC,CAAC;UAAE,CAAC,EAAE,CAAC,CAAC;QAC9D,CAAC,MACI,IAAIC,QAAQ,GAAG,GAAG,EAAE;UACrB;UACAJ,UAAU,CAAC,YAAY;YAAE,OAAO5B,KAAK,CAAC+B,UAAU,CAACC,QAAQ,GAAG,CAAC,CAAC;UAAE,CAAC,EAAE,GAAG,CAAC;QAC3E,CAAC,MACI;UACD;UACA,MAAM,IAAII,KAAK,CAAC,oDAAoD,CAAC;QACzE;QACA;MACJ;MACA,IAAIC,OAAO,GAAGrD,UAAU,CAACgB,KAAK,CAACsC,IAAI,CAAC;MACpC,IAAI,CAACD,OAAO,EAAE;QACV,MAAM,IAAID,KAAK,CAAC,mDAAmD,CAAC;MACxE;MACA,IAAIG,SAAS,GAAGlE,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE2B,KAAK,CAACJ,KAAK,CAAC4C,IAAI,CAAC,EAAE;QAAEC,QAAQ,EAAEvC,SAAS;QAAE+B,MAAM,EAAEA,MAAM;QAAES,QAAQ,EAAE1C,KAAK,CAACJ,KAAK,CAAC+C,QAAQ;QAAEhC,MAAM,EAAEX,KAAK,CAACW,MAAM;QAAEiC,OAAO,EAAEzD,YAAY,CAAC,CAACU,EAAE,GAAGG,KAAK,CAACJ,KAAK,CAAC4C,IAAI,MAAM,IAAI,IAAI3C,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC+C,OAAO,EAAE5C,KAAK,CAACJ,KAAK,CAACgD,OAAO,CAAC;QAAEC,OAAO,EAAE,CAAC/C,EAAE,GAAGE,KAAK,CAACJ,KAAK,CAACiD,OAAO,MAAM,IAAI,IAAI/C,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAACC,EAAE,GAAGC,KAAK,CAACJ,KAAK,CAAC4C,IAAI,MAAM,IAAI,IAAIzC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC8C,OAAO;QAAEC,KAAK,EAAE,SAAAA,CAAUzC,MAAM,EAAE;UAC1aL,KAAK,CAACK,MAAM,GAAGA,MAAM;UACrBL,KAAK,CAAC+C,YAAY,CAAC,CAAC,CAAC,CAAC;UACtB;UACA;UACA;UACA;UACA;UACA;UACA,IAAI/C,KAAK,CAACW,MAAM,IAAI,CAACzB,iBAAiB,CAAC+C,MAAM,CAAC,EAAE;YAC5C5B,MAAM,CAAC2C,IAAI,CAAC,YAAY,EAAE,UAAU/B,IAAI,EAAE;cACtCZ,MAAM,CAACK,UAAU,CAACV,KAAK,CAACiD,eAAe,CAAC,CAAC,EAAE;gBAAEC,SAAS,EAAE;cAAK,CAAC,CAAC;YACnE,CAAC,CAAC;UACN;UACA,IAAIlD,KAAK,CAACJ,KAAK,CAAC4C,IAAI,IAAIvD,UAAU,CAACe,KAAK,CAACJ,KAAK,CAAC4C,IAAI,CAACM,KAAK,CAAC,EAAE;YACxD9C,KAAK,CAACJ,KAAK,CAAC4C,IAAI,CAACM,KAAK,CAACzC,MAAM,CAAC;UAClC;QACJ,CAAC;QAAE8C,sBAAsB,EAAE,SAAAA,CAAU9C,MAAM,EAAE;UACzC,IAAIR,EAAE,EAAEC,EAAE;UACV;UACA,IAAIsD,YAAY,GAAGpD,KAAK,CAACiD,eAAe,CAAC,CAAC;UAC1CjD,KAAK,CAACO,cAAc,GAAG,CAACV,EAAE,GAAGG,KAAK,CAACO,cAAc,MAAM,IAAI,IAAIV,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGQ,MAAM,CAACoB,UAAU,CAAC,CAAC;UACvG,IAAIzB,KAAK,CAACO,cAAc,KAAK6C,YAAY,EAAE;YACvCpD,KAAK,CAACO,cAAc,GAAG6C,YAAY;YACnC;YACA/C,MAAM,CAACK,UAAU,CAAC0C,YAAY,CAAC;YAC/B/C,MAAM,CAACG,WAAW,CAAC6C,KAAK,CAAC,CAAC;YAC1BhD,MAAM,CAACG,WAAW,CAAC8C,GAAG,CAAC,CAAC;YACxBjD,MAAM,CAACkD,QAAQ,CAAC,KAAK,CAAC;UAC1B;UACA,IAAIZ,QAAQ,GAAG,CAAC7C,EAAE,GAAGE,KAAK,CAACJ,KAAK,CAAC+C,QAAQ,MAAM,IAAI,IAAI7C,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,KAAK;UACjFN,OAAO,CAACQ,KAAK,CAACK,MAAM,EAAEsC,QAAQ,GAAG,UAAU,GAAG,QAAQ,CAAC;UACvD;UACA,IAAI3C,KAAK,CAACJ,KAAK,CAAC4C,IAAI,IAAIvD,UAAU,CAACe,KAAK,CAACJ,KAAK,CAAC4C,IAAI,CAACW,sBAAsB,CAAC,EAAE;YACzEnD,KAAK,CAACJ,KAAK,CAAC4C,IAAI,CAACW,sBAAsB,CAAC9C,MAAM,CAAC;UACnD;QACJ;MAAE,CAAC,CAAC;MACR,IAAI,CAACL,KAAK,CAACW,MAAM,EAAE;QACfsB,MAAM,CAACuB,KAAK,CAACC,UAAU,GAAG,EAAE;MAChC;MACA,IAAIvE,iBAAiB,CAAC+C,MAAM,CAAC,EAAE;QAC3BA,MAAM,CAAC3B,KAAK,GAAGN,KAAK,CAACiD,eAAe,CAAC,CAAC;MAC1C;MACAZ,OAAO,CAACG,IAAI,CAACD,SAAS,CAAC;IAC3B,CAAC;IACDvC,KAAK,CAAC0D,EAAE,GAAG1D,KAAK,CAACJ,KAAK,CAAC8D,EAAE,IAAItE,IAAI,CAAC,YAAY,CAAC;IAC/CY,KAAK,CAACkC,UAAU,GAAGpD,KAAK,CAAC6E,SAAS,CAAC,CAAC;IACpC3D,KAAK,CAACW,MAAM,GAAG,CAACZ,EAAE,GAAG,CAACF,EAAE,GAAGG,KAAK,CAACJ,KAAK,CAACe,MAAM,MAAM,IAAI,IAAId,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAACC,EAAE,GAAGE,KAAK,CAACJ,KAAK,CAAC4C,IAAI,MAAM,IAAI,IAAI1C,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACa,MAAM,MAAM,IAAI,IAAIZ,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,KAAK;IAC9LC,KAAK,CAAC4D,aAAa,GAAG,CAAC,CAAC;IACxB,OAAO5D,KAAK;EAChB;EACAxC,MAAM,CAACqG,cAAc,CAACnE,MAAM,CAAC7B,SAAS,EAAE,MAAM,EAAE;IAC5CiG,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,IAAIjE,EAAE,EAAEC,EAAE;MACV,OAAO,CAACA,EAAE,GAAG,CAACD,EAAE,GAAG,IAAI,CAACqC,UAAU,CAACC,OAAO,MAAM,IAAI,IAAItC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACkE,aAAa,CAACC,WAAW,MAAM,IAAI,IAAIlE,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG6B,MAAM;IAC1J,CAAC;IACDsC,UAAU,EAAE,KAAK;IACjBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFxE,MAAM,CAAC7B,SAAS,CAACsG,kBAAkB,GAAG,UAAUC,SAAS,EAAE;IACvD,IAAIpE,KAAK,GAAG,IAAI;IAChB,IAAIH,EAAE,EAAEC,EAAE;IACV,IAAI,IAAI,CAACG,aAAa,EAAE;MACpBoE,YAAY,CAAC,IAAI,CAACpE,aAAa,CAAC;MAChC,IAAI,CAACA,aAAa,GAAGC,SAAS;IAClC;IACA,IAAI,IAAI,CAACG,MAAM,EAAE;MACb,IAAI,CAAC0C,YAAY,CAACqB,SAAS,CAAC;MAC5B,IAAI,IAAI,CAAC/D,MAAM,CAACkB,WAAW,EAAE;QACzB,IAAI,CAAChB,cAAc,GAAG,CAACV,EAAE,GAAG,IAAI,CAACU,cAAc,MAAM,IAAI,IAAIV,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,IAAI,CAACQ,MAAM,CAACoB,UAAU,CAAC,CAAC;QAC1G,IAAI,OAAO,IAAI,CAAC7B,KAAK,CAACwD,YAAY,KAAK,QAAQ,IAAI,IAAI,CAACxD,KAAK,CAACwD,YAAY,KAAKgB,SAAS,CAAChB,YAAY,EAAE;UACnG;UACA,IAAI,CAAC/C,MAAM,CAACK,UAAU,CAAC,IAAI,CAACd,KAAK,CAACwD,YAAY,CAAC;UAC/C,IAAI,CAAC/C,MAAM,CAACG,WAAW,CAAC6C,KAAK,CAAC,CAAC;UAC/B,IAAI,CAAChD,MAAM,CAACG,WAAW,CAAC8C,GAAG,CAAC,CAAC;UAC7B,IAAI,CAACjD,MAAM,CAACkD,QAAQ,CAAC,KAAK,CAAC;QAC/B,CAAC,MACI,IAAI,OAAO,IAAI,CAAC3D,KAAK,CAACU,KAAK,KAAK,QAAQ,IAAI,IAAI,CAACV,KAAK,CAACU,KAAK,KAAK,IAAI,CAACC,cAAc,EAAE;UACvF,IAAI+D,aAAa,GAAG,IAAI,CAACjE,MAAM;UAC/BiE,aAAa,CAAC9D,WAAW,CAAC+D,QAAQ,CAAC,YAAY;YAC3C;YACA;YACA,IAAIC,MAAM;YACV,IAAI,CAACxE,KAAK,CAACW,MAAM,IAAI2D,aAAa,CAAC1D,QAAQ,CAAC,CAAC,EAAE;cAC3C,IAAI;gBACA;gBACA;gBACA4D,MAAM,GAAGF,aAAa,CAACzD,SAAS,CAACK,WAAW,CAAC,CAAC,CAAC;cACnD,CAAC,CACD,OAAOH,CAAC,EAAE,CAAE;YAChB;YACA,IAAIZ,WAAW,GAAGH,KAAK,CAACG,WAAW;YACnCmE,aAAa,CAAC5D,UAAU,CAACV,KAAK,CAACJ,KAAK,CAACU,KAAK,CAAC;YAC3C,IAAI,CAACN,KAAK,CAACW,MAAM,IAAI2D,aAAa,CAAC1D,QAAQ,CAAC,CAAC,EAAE;cAC3C,KAAK,IAAI6D,EAAE,GAAG,CAAC,EAAE5E,EAAE,GAAG,CAAC2E,MAAM,EAAErE,WAAW,CAAC,EAAEsE,EAAE,GAAG5E,EAAE,CAACjB,MAAM,EAAE6F,EAAE,EAAE,EAAE;gBAC/D,IAAIC,QAAQ,GAAG7E,EAAE,CAAC4E,EAAE,CAAC;gBACrB,IAAIC,QAAQ,EAAE;kBACV,IAAI;oBACAJ,aAAa,CAACzD,SAAS,CAACC,cAAc,CAAC4D,QAAQ,CAAC;oBAChD1E,KAAK,CAACG,WAAW,GAAGuE,QAAQ;oBAC5B;kBACJ,CAAC,CACD,OAAO3D,CAAC,EAAE,CAAE;gBAChB;cACJ;YACJ;UACJ,CAAC,CAAC;QACN;QACA,IAAI,IAAI,CAACnB,KAAK,CAAC+C,QAAQ,KAAKyB,SAAS,CAACzB,QAAQ,EAAE;UAC5C,IAAIA,QAAQ,GAAG,CAAC7C,EAAE,GAAG,IAAI,CAACF,KAAK,CAAC+C,QAAQ,MAAM,IAAI,IAAI7C,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,KAAK;UAChFN,OAAO,CAAC,IAAI,CAACa,MAAM,EAAEsC,QAAQ,GAAG,UAAU,GAAG,QAAQ,CAAC;QAC1D;MACJ;IACJ;EACJ,CAAC;EACDjD,MAAM,CAAC7B,SAAS,CAAC8G,iBAAiB,GAAG,YAAY;IAC7C,IAAI3E,KAAK,GAAG,IAAI;IAChB,IAAIH,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE6E,EAAE,EAAEC,EAAE;IACtB,IAAI7F,UAAU,CAAC,IAAI,CAACsD,IAAI,CAAC,KAAK,IAAI,EAAE;MAChC,IAAI,CAACP,UAAU,CAAC,CAAC;IACrB,CAAC,MACI,IAAIpE,KAAK,CAACmH,OAAO,CAAC,IAAI,CAAClF,KAAK,CAACmF,gBAAgB,CAAC,IAAI,IAAI,CAACnF,KAAK,CAACmF,gBAAgB,CAACnG,MAAM,KAAK,CAAC,EAAE;MAC7F,CAACkB,EAAE,GAAG,CAACD,EAAE,GAAG,IAAI,CAACD,KAAK,EAAEoF,kBAAkB,MAAM,IAAI,IAAIlF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC/B,IAAI,CAAC8B,EAAE,EAAE,IAAIuC,KAAK,CAAC,oFAAoF,CAAC,CAAC;IACjM,CAAC,MACI,IAAI,CAACrC,EAAE,GAAG,IAAI,CAACmC,UAAU,CAACC,OAAO,MAAM,IAAI,IAAIpC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACgE,aAAa,EAAE;MAC3F,IAAIkB,cAAc,GAAG,SAAAA,CAAA,EAAY;QAC7B,IAAIpF,EAAE,EAAEC,EAAE;QACV,CAACA,EAAE,GAAG,CAACD,EAAE,GAAGG,KAAK,CAACJ,KAAK,EAAEsF,aAAa,MAAM,IAAI,IAAIpF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC/B,IAAI,CAAC8B,EAAE,CAAC;QACxFG,KAAK,CAAC+B,UAAU,CAAC,CAAC;MACtB,CAAC;MACD,IAAIoD,YAAY,GAAG,SAAAA,CAAUC,GAAG,EAAE;QAC9B,IAAIvF,EAAE,EAAEC,EAAE;QACV,CAACA,EAAE,GAAG,CAACD,EAAE,GAAGG,KAAK,CAACJ,KAAK,EAAEoF,kBAAkB,MAAM,IAAI,IAAIlF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC/B,IAAI,CAAC8B,EAAE,EAAEuF,GAAG,CAAC;MACtG,CAAC;MACDrG,YAAY,CAACsG,QAAQ,CAAC,IAAI,CAACnD,UAAU,CAACC,OAAO,CAAC4B,aAAa,EAAE,IAAI,CAACuB,gBAAgB,CAAC,CAAC,EAAE,CAACT,EAAE,GAAG,CAACD,EAAE,GAAG,IAAI,CAAChF,KAAK,CAAC2F,aAAa,MAAM,IAAI,IAAIX,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACY,KAAK,MAAM,IAAI,IAAIX,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC,EAAEI,cAAc,EAAEE,YAAY,CAAC;IAChP;EACJ,CAAC;EACDzF,MAAM,CAAC7B,SAAS,CAAC4H,oBAAoB,GAAG,YAAY;IAChD,IAAIzF,KAAK,GAAG,IAAI;IAChB,IAAIK,MAAM,GAAG,IAAI,CAACA,MAAM;IACxB,IAAIA,MAAM,EAAE;MACRA,MAAM,CAACqF,GAAG,CAAC,IAAI,CAACC,YAAY,CAAC,CAAC,EAAE,IAAI,CAACrE,kBAAkB,CAAC;MACxDjB,MAAM,CAACqF,GAAG,CAAC,IAAI,CAACE,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC5E,iBAAiB,CAAC;MAC3DX,MAAM,CAACqF,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC5D,yBAAyB,CAAC;MACtDzB,MAAM,CAACqF,GAAG,CAAC,SAAS,EAAE,IAAI,CAACvE,wBAAwB,CAAC;MACpDd,MAAM,CAACqF,GAAG,CAAC,UAAU,EAAE,IAAI,CAACpE,kBAAkB,CAAC;MAC/C9D,MAAM,CAACqI,IAAI,CAAC,IAAI,CAACjC,aAAa,CAAC,CAACkC,OAAO,CAAC,UAAUC,SAAS,EAAE;QACzD1F,MAAM,CAACqF,GAAG,CAACK,SAAS,EAAE/F,KAAK,CAAC4D,aAAa,CAACmC,SAAS,CAAC,CAAC;MACzD,CAAC,CAAC;MACF,IAAI,CAACnC,aAAa,GAAG,CAAC,CAAC;MACvBvD,MAAM,CAAC2F,MAAM,CAAC,CAAC;MACf,IAAI,CAAC3F,MAAM,GAAGH,SAAS;IAC3B;EACJ,CAAC;EACDR,MAAM,CAAC7B,SAAS,CAACoI,MAAM,GAAG,YAAY;IAClC,OAAO,IAAI,CAACtF,MAAM,GAAG,IAAI,CAACuF,YAAY,CAAC,CAAC,GAAG,IAAI,CAACC,YAAY,CAAC,CAAC;EAClE,CAAC;EACDzG,MAAM,CAAC7B,SAAS,CAAC8H,YAAY,GAAG,YAAY;IACxC,IAAI9F,EAAE,EAAEC,EAAE,EAAEC,EAAE;IACd,IAAIqG,IAAI,GAAG,CAACrG,EAAE,GAAG,CAACD,EAAE,GAAG,CAACD,EAAE,GAAGb,UAAU,CAAC,IAAI,CAACsD,IAAI,CAAC,MAAM,IAAI,IAAIzC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACwG,GAAG,MAAM,IAAI,IAAIvG,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACwG,OAAO,MAAM,IAAI,IAAIvG,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACqG,IAAI,CAAC,CAAC;IAChM,OAAQA,IAAI,GACN,sDAAsD,GACtD,sDAAsD;EAChE,CAAC;EACD1G,MAAM,CAAC7B,SAAS,CAAC+H,gBAAgB,GAAG,YAAY;IAC5C,OAAOtG,2BAA2B,CAAC,CAAC,GAAG,6BAA6B,GAAG,iBAAiB;EAC5F,CAAC;EACDI,MAAM,CAAC7B,SAAS,CAACqI,YAAY,GAAG,YAAY;IACxC,IAAIrG,EAAE,GAAG,IAAI,CAACD,KAAK,CAAC2G,OAAO;MAAEA,OAAO,GAAG1G,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,EAAE;IACjE,OAAOf,KAAK,CAAC0H,aAAa,CAACD,OAAO,EAAE;MAChCE,GAAG,EAAE,IAAI,CAACvE,UAAU;MACpBwB,EAAE,EAAE,IAAI,CAACA;IACb,CAAC,CAAC;EACN,CAAC;EACDhE,MAAM,CAAC7B,SAAS,CAACsI,YAAY,GAAG,YAAY;IACxC,OAAOrH,KAAK,CAAC0H,aAAa,CAAC,UAAU,EAAE;MACnCC,GAAG,EAAE,IAAI,CAACvE,UAAU;MACpBsB,KAAK,EAAE;QAAEC,UAAU,EAAE;MAAS,CAAC;MAC/BiD,IAAI,EAAE,IAAI,CAAC9G,KAAK,CAAC+G,YAAY;MAC7BjD,EAAE,EAAE,IAAI,CAACA;IACb,CAAC,CAAC;EACN,CAAC;EACDhE,MAAM,CAAC7B,SAAS,CAACyH,gBAAgB,GAAG,YAAY;IAC5C,IAAIzF,EAAE,EAAEC,EAAE;IACV,IAAI8G,KAAK,GAAG,CAAC/G,EAAE,GAAG,IAAI,CAACD,KAAK,CAAC2F,aAAa,MAAM,IAAI,IAAI1F,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC+G,KAAK;IACzF,IAAIC,KAAK,GAAG,CAAC/G,EAAE,GAAG,IAAI,CAACF,KAAK,CAAC2F,aAAa,MAAM,IAAI,IAAIzF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC+G,KAAK;IACzF,IAAI,IAAI,CAACjH,KAAK,CAACmF,gBAAgB,KAAK7E,SAAS,EAAE;MAC3C,IAAI,OAAO,IAAI,CAACN,KAAK,CAACmF,gBAAgB,KAAK,QAAQ,EAAE;QACjD,OAAO,CAAC;UAAE+B,GAAG,EAAE,IAAI,CAAClH,KAAK,CAACmF,gBAAgB;UAAE6B,KAAK,EAAEA,KAAK;UAAEC,KAAK,EAAEA;QAAM,CAAC,CAAC;MAC7E;MACA;MACA,OAAO,IAAI,CAACjH,KAAK,CAACmF,gBAAgB,CAACgC,GAAG,CAAC,UAAUC,IAAI,EAAE;QACnD,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;UAC1B;UACA;UACA,OAAO;YAAEF,GAAG,EAAEE,IAAI;YAAEJ,KAAK,EAAEA,KAAK;YAAEC,KAAK,EAAEA;UAAM,CAAC;QACpD,CAAC,MACI;UACD,OAAOG,IAAI;QACf;MACJ,CAAC,CAAC;IACN;IACA;IACA,IAAIC,OAAO,GAAG,IAAI,CAACrH,KAAK,CAACsH,YAAY;IACrC,IAAIC,MAAM,GAAG,IAAI,CAACvH,KAAK,CAACuH,MAAM,GAAG,IAAI,CAACvH,KAAK,CAACuH,MAAM,GAAG,YAAY;IACjE,IAAIC,WAAW,GAAG,2BAA2B,CAACC,MAAM,CAACF,MAAM,EAAE,WAAW,CAAC,CAACE,MAAM,CAACJ,OAAO,EAAE,iBAAiB,CAAC;IAC5G,OAAO,CAAC;MAAEH,GAAG,EAAEM,WAAW;MAAER,KAAK,EAAEA,KAAK;MAAEC,KAAK,EAAEA;IAAM,CAAC,CAAC;EAC7D,CAAC;EACDnH,MAAM,CAAC7B,SAAS,CAACoF,eAAe,GAAG,YAAY;IAC3C,IAAI,OAAO,IAAI,CAACrD,KAAK,CAACwD,YAAY,KAAK,QAAQ,EAAE;MAC7C,OAAO,IAAI,CAACxD,KAAK,CAACwD,YAAY;IAClC,CAAC,MACI,IAAI,OAAO,IAAI,CAACxD,KAAK,CAACU,KAAK,KAAK,QAAQ,EAAE;MAC3C,OAAO,IAAI,CAACV,KAAK,CAACU,KAAK;IAC3B,CAAC,MACI;MACD,OAAO,EAAE;IACb;EACJ,CAAC;EACDZ,MAAM,CAAC7B,SAAS,CAACkF,YAAY,GAAG,UAAUqB,SAAS,EAAE;IACjD,IAAIpE,KAAK,GAAG,IAAI;IAChB,IAAI,IAAI,CAACK,MAAM,KAAKH,SAAS,EAAE;MAC3B;MACAb,cAAc,CAAC,IAAI,CAACgB,MAAM,EAAE+D,SAAS,EAAE,IAAI,CAACxE,KAAK,EAAE,IAAI,CAACgE,aAAa,EAAE,UAAUvC,GAAG,EAAE;QAAE,OAAOrB,KAAK,CAACJ,KAAK,CAACyB,GAAG,CAAC;MAAE,CAAC,CAAC;MACnH;MACA,IAAIiG,iBAAiB,GAAG,SAAAA,CAAU1J,CAAC,EAAE;QAAE,OAAOA,CAAC,CAACiE,cAAc,KAAK3B,SAAS,IAAItC,CAAC,CAAC0C,KAAK,KAAKJ,SAAS;MAAE,CAAC;MACxG,IAAIqH,aAAa,GAAGD,iBAAiB,CAAClD,SAAS,CAAC;MAChD,IAAIoD,aAAa,GAAGF,iBAAiB,CAAC,IAAI,CAAC1H,KAAK,CAAC;MACjD,IAAI,CAAC2H,aAAa,IAAIC,aAAa,EAAE;QACjC,IAAI,CAACnH,MAAM,CAACoH,EAAE,CAAC,IAAI,CAAC9B,YAAY,CAAC,CAAC,EAAE,IAAI,CAACrE,kBAAkB,CAAC;QAC5D,IAAI,CAACjB,MAAM,CAACoH,EAAE,CAAC,IAAI,CAAC7B,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC5E,iBAAiB,CAAC;QAC/D,IAAI,CAACX,MAAM,CAACoH,EAAE,CAAC,SAAS,EAAE,IAAI,CAACtG,wBAAwB,CAAC;QACxD,IAAI,CAACd,MAAM,CAACoH,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC3F,yBAAyB,CAAC;QACvD,IAAI,CAACzB,MAAM,CAACoH,EAAE,CAAC,UAAU,EAAE,IAAI,CAACnG,kBAAkB,CAAC;MACvD,CAAC,MACI,IAAIiG,aAAa,IAAI,CAACC,aAAa,EAAE;QACtC,IAAI,CAACnH,MAAM,CAACqF,GAAG,CAAC,IAAI,CAACC,YAAY,CAAC,CAAC,EAAE,IAAI,CAACrE,kBAAkB,CAAC;QAC7D,IAAI,CAACjB,MAAM,CAACqF,GAAG,CAAC,IAAI,CAACE,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC5E,iBAAiB,CAAC;QAChE,IAAI,CAACX,MAAM,CAACqF,GAAG,CAAC,SAAS,EAAE,IAAI,CAACvE,wBAAwB,CAAC;QACzD,IAAI,CAACd,MAAM,CAACqF,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC5D,yBAAyB,CAAC;QACxD,IAAI,CAACzB,MAAM,CAACqF,GAAG,CAAC,UAAU,EAAE,IAAI,CAACpE,kBAAkB,CAAC;MACxD;IACJ;EACJ,CAAC;EACD5B,MAAM,CAACgI,SAAS,GAAGjI,eAAe;EAClCC,MAAM,CAACiI,YAAY,GAAG;IAClBT,YAAY,EAAE;EAClB,CAAC;EACD,OAAOxH,MAAM;AACjB,CAAC,CAACZ,KAAK,CAAC8I,SAAS,CAAE;AACnB,SAASlI,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}